{"ast":null,"code":"import { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nexport const authGuard = (route, state) => {\n  let auth = inject(AuthService);\n  let storedUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n  let user;\n  if (!!storedUser) {\n    user = JSON.parse(storedUser);\n  }\n  if (!user.token) {\n    alert(\"Neovlasteni pokusaj pristupa sistema\");\n    auth.logout();\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["inject","AuthService","authGuard","route","state","auth","storedUser","JSON","parse","localStorage","getItem","user","token","alert","logout"],"sources":["C:\\Users\\amrah\\OneDrive\\Desktop\\Angular projects\\company-management\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n let auth = inject(AuthService);\n let storedUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n let user;\n if(!!storedUser)\n {\n  user = JSON.parse(storedUser);\n }\n \n \n if(!user.token){\n     alert(\"Neovlasteni pokusaj pristupa sistema\");\n     auth.logout();\n     return false;\n }\n  return true;\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AAEtC,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACxD,IAAIC,IAAI,GAAGL,MAAM,CAACC,WAAW,CAAC;EAC9B,IAAIK,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC;EACxE,IAAIC,IAAI;EACR,IAAG,CAAC,CAACL,UAAU,EACf;IACCK,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC;;EAI9B,IAAG,CAACK,IAAI,CAACC,KAAK,EAAC;IACXC,KAAK,CAAC,sCAAsC,CAAC;IAC7CR,IAAI,CAACS,MAAM,EAAE;IACb,OAAO,KAAK;;EAEf,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}