{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this._usernameAdmin = 'admin@gmail.com';\n    this._passwordAdmin = '123456';\n    this._router = inject(Router);\n  }\n  login(username = null, password = null) {\n    console.log(username, password);\n    if (this._usernameAdmin != username || this._passwordAdmin != password) {\n      console.log('Pogresni pristupni podaci');\n      return;\n    }\n    //TODO extend login with basic user\n    this._router.navigate(['features']);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","Router","AuthService","constructor","_usernameAdmin","_passwordAdmin","_router","login","username","password","console","log","navigate","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\amrah\\OneDrive\\Desktop\\Angular projects\\company-management\\src\\app\\core\\services\\auth.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly _usernameAdmin = 'admin@gmail.com';\n  private readonly _passwordAdmin = '123456';\n\nprivate _router = inject(Router);\n  constructor() { }\n\n  public login(\n    username:string | null = null, \n    password:string | null = null){\n      console.log(username, password);\n      if(this._usernameAdmin != username || this._passwordAdmin != password){\n         console.log('Pogresni pristupni podaci');\n         return;\n      }\n\n      //TODO extend login with basic user\n      this._router.navigate(['features']);\n  }\n}"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,MAAM,QAAQ,iBAAiB;;AAKxC,OAAM,MAAOC,WAAW;EAKtBC,YAAA;IAJiB,KAAAC,cAAc,GAAG,iBAAiB;IAClC,KAAAC,cAAc,GAAG,QAAQ;IAEpC,KAAAC,OAAO,GAAGN,MAAM,CAACC,MAAM,CAAC;EACd;EAETM,KAAKA,CACVC,QAAA,GAAyB,IAAI,EAC7BC,QAAA,GAAyB,IAAI;IAC3BC,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAEC,QAAQ,CAAC;IAC/B,IAAG,IAAI,CAACL,cAAc,IAAII,QAAQ,IAAI,IAAI,CAACH,cAAc,IAAII,QAAQ,EAAC;MACnEC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC;;IAGH;IACA,IAAI,CAACL,OAAO,CAACM,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACvC;EAAC,QAAAC,CAAA,G;qBAlBUX,WAAW;EAAA;EAAA,QAAAY,EAAA,G;WAAXZ,WAAW;IAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}